{"version":3,"sources":["context/authentication/authentication.types.ts","context/authentication/authentication.reducer.ts","context/room/room.types.ts","theme/index.ts","theme/colors.ts","theme/space.ts","theme/radii.ts","theme/typography.ts","theme/utils.ts","components/core/Box/Box.component.tsx","components/core/Button/Button.component.tsx","components/core/Card/Card.component.tsx","components/core/Heading/Heading.component.tsx","components/core/Text/Text.component.tsx","components/core/Avatar/Avatar.component.tsx","components/core/Icon/icons.ts","components/core/Icon/Icon.component.tsx","components/ui/ProfileMenu/ProfileMenu.component.tsx","components/layout/Header/Header.component.tsx","containers/Header/Header.container.tsx","components/layout/Page/Page.component.tsx","utils/api.ts","context/room/room.actions.ts","context/socket/socket.types.ts","utils/helpers.ts","components/ui/TrackList/TrackList.component.tsx","context/room/room.reducer.ts","context/room/room.provider.tsx","containers/QueueContainer/Queue.container.tsx","components/core/Spinner/Spinner.component.tsx","components/ui/SearchResults/SearchResults.component.tsx","components/core/Input/Input.component.tsx","containers/Search/Search.container.tsx","hooks/useVisible.ts","hooks/usePlaybackPosition.ts","components/ui/Player/Player.component.tsx","containers/Player/Player.container.tsx","context/socket/socket.provider.tsx","routes.tsx","components/layout/MultiRails/MultiRails.component.tsx","components/ui/UserList/UserList.component.tsx","containers/People/People.container.tsx","views/Dashboard/Dashboard.view.tsx","views/Login/Login.view.tsx","utils/spotify/spotifyApi.ts","context/authentication/authentication.actions.ts","context/authentication/authentication.provider.tsx","containers/ApplicationRoute/ApplicationRoute.container.tsx","theme/globalStyles.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AuthenticationActionTypes","RoomActionTypes","authenticationReducer","state","action","type","AUTH_ATTEMPT","isLoading","AUTH_SUCCESS","isAuthenticated","currentUser","payload","AUTH_ERROR","LOGOUT_ATTEMPT","LOGOUT_SUCCESS","LOGOUT_ERROR","Error","defaultTheme","colors","accent100","accent200","accent300","white","grey100","grey200","grey300","grey400","grey500","grey600","space","1","2","3","4","5","6","7","8","9","radii","fonts","coreFontFamily","fontSizes","heading1","heading2","paragraph","small","fontWeights","regular","bold","lineHeights","letterSpacings","stitches","createCss","theme","utils","bd","config","value","border","px","paddingLeft","paddingRight","py","paddingTop","paddingBottom","mx","marginLeft","marginRight","my","marginTop","marginBottom","linearGradient","backgroundImage","styled","global","css","keyframes","Box","boxSizing","StyledButton","fontSize","lineHeight","fontWeight","letterSpacing","color","transition","borderRadius","textDecoration","outline","variants","emphasis","high","backgroundColor","cursor","borderColor","boxShadow","textUnderlineOffset","low","fullWidth","true","width","Button","children","to","props","style","as","StyledCard","padding","Card","React","forwardRef","cardProps","StyledHeading","margin","size","h1","h2","Heading","StyledText","Text","StyledAvatarWrapper","position","display","StyledAvatar","RadixAvatar","alignItems","justifyContent","verticalAlign","overflow","userSelect","height","medium","StyledImage","objectFit","StyledFallback","StyledAvatarStatus","bottom","right","borderWidth","Avatar","imageSrc","status","name","src","delayMs","string","names","split","initials","substring","toUpperCase","length","getInitials","Icons","chevronDown","plus","spyGlass","play","pause","StyledSvg","Icon","fill","icon","iconProps","viewBox","xmlns","xmlnsXlink","ref","d","fillRule","StyledTrigger","DropdownMenu","transform","StyledContent","minWidth","StyledItem","ProfileMenu","profileImage","menuItems","menuItemElements","map","item","index","onSelect","buttonAction","buttonText","align","Header","dispatch","useAuthenticationDispatch","profileMenuItems","logoutUser","HeaderContainer","useAuthenticationState","Page","flexDirection","maxWidth","apiRequest","accessToken","localStorage","getItem","serverBaseUrl","process","axiosInstance","axios","create","baseURL","withCredentials","headers","Authorization","interceptors","response","use","a","error","originalRequest","_retry","get","refreshRes","setItem","data","spotifyAccessToken","Promise","reject","url","window","location","href","RoutePaths","LOGIN","api","getRefreshSpotifyAccessToken","postTrackToQueue","queueItemData","post","getRoomQueue","getCurrentlyPlaying","SocketEventListeners","SocketEventEmitters","updateRoomUsers","users","UPDATE_USERS","updateRoomQueue","queueItems","UPDATE_QUEUE","queue","GET_QUEUE_SUCCESS","updateCurrentlyPlaying","currentlyPlaying","UPDATE_CURRENTLY_PLAYING","GET_CURRENTLY_PLAYING_SUCCESS","resolve","msToMin","ms","minutes","Math","floor","seconds","StyledTrackListCard","StyledTrackRow","gridColumnGap","gridTemplateColumns","StyledAlbumImage","StyledContentStack","StyledFlexText","StyledEmptyTracksCard","textAlign","TrackList","tracks","trackListProps","trackList","track","durationInMin","duration","trackNo","album","images","artists","id","roomReducer","initialState","user","startedAt","RoomStateContext","createContext","RoomDispatchContext","undefined","RoomProvider","useReducer","Provider","useRoomState","context","useContext","useRoomDispatch","QueueContainer","useEffect","spinnerAnimation","StyledSpinnerContainer","animation","StyledSpinnerItem","animationDelay","Spinner","StyledResultWrapper","content","zIndex","StyledResult","SearchResults","results","loading","handleTrackSelection","SearchResultProps","onClick","maxHeight","overflowY","StyledInputContainer","StyledInput","showIcon","StyledIcon","top","Input","iconFill","inputProps","SearchContainer","useState","searchValue","setSearchValue","setLoading","searchResults","setSearchResults","initialIsVisible","isVisible","setIsVisible","useRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","useVisible","source","CancelToken","cancelToken","token","spotifyApi","getTrackBySearchTerm","trackRes","fetchTracks","cancel","placeholder","onChange","e","trackId","find","usePlaybackPosition","trackDuration","trackStartTime","currentPositionMs","setCurrentPositionMs","playbackPercent","setPlaybackPercent","currentPositionMin","setCurrentPositionMin","trackEndTime","handleTick","delta","Date","now","remaining","percent","tick","setInterval","clearInterval","StyledInnerWrapper","StyledPlayerContent","StyledPlaybackBarWrapper","StyledPlaybackBar","StyledPlaybackBarProgress","left","StyledPlaybackMeta","StyledEmptyTrackCard","StyledControlButton","Player","paused","onControlClick","playerProps","PlayerContainer","webPlayer","deviceReady","setDeviceReady","deviceId","setDeviceId","setPaused","onSpotifyWebPlaybackSDKReady","initializeWebPlayer","loadWebPlayerScript","disconnect","pausePlayback","startPlayback","getElementById","scriptTag","createElement","async","defer","onload","onerror","head","appendChild","Spotify","getOAuthToken","cb","addListener","message","console","res","device_id","log","connect","SocketConnectionContext","SocketProvider","socket","host","stop","HubConnectionBuilder","withUrl","withAutomaticReconnect","build","start","send","on","JOIN_ROOM","socketApi","Root","Left","Main","StyledUser","UserList","userId","PeopleContainer","DashboardView","conn","useSocketConnection","Routes","path","component","history","useHistory","push","DASHBOARD","isPrivate","NOT_FOUND","exact","spotifyRequest","searchTerm","transformedTrackObj","items","transformedArtistObj","artist","transformedAlbumObj","duration_ms","isCancel","body","uris","position_ms","put","getCurrentUserDetails","transformedUserObj","display_name","getCurrentUser","userDetails","removeItem","AuthenticationStateContext","AuthenicationDispatchContext","AuthenticationProvider","search","useLocation","URLSearchParams","ApplicationRouteContainer","Component","rest","pathname","globalStyles","fontFamily","textRendering","App","route","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9f34b787.chunk.js","sourcesContent":["export type User = {\n  userId: string;\n  name: string;\n  profileImage: string;\n};\n\nexport interface AuthenticationState {\n  isLoading: boolean;\n  isAuthenticated: boolean;\n  currentUser: User | null;\n}\n\nexport enum AuthenticationActionTypes {\n  AUTH_ATTEMPT = 'auth_attempt',\n  AUTH_SUCCESS = 'auth_success',\n  AUTH_ERROR = 'auth_error',\n  LOGOUT_ATTEMPT = 'logout_attempt',\n  LOGOUT_SUCCESS = 'logout_success',\n  LOGOUT_ERROR = 'logout_error',\n}\n\nexport type AuthenticationAction =\n  | { type: AuthenticationActionTypes.AUTH_ATTEMPT }\n  | { type: AuthenticationActionTypes.AUTH_SUCCESS; payload: User }\n  | { type: AuthenticationActionTypes.AUTH_ERROR }\n  | { type: AuthenticationActionTypes.LOGOUT_ATTEMPT }\n  | { type: AuthenticationActionTypes.LOGOUT_SUCCESS }\n  | { type: AuthenticationActionTypes.LOGOUT_ERROR };\n\nexport type AuthenticationDispatch = (action: AuthenticationAction) => void;\n","import {\n  AuthenticationState,\n  AuthenticationAction,\n  AuthenticationActionTypes,\n} from './authentication.types';\n\nexport const authenticationReducer = (\n  state: AuthenticationState,\n  action: AuthenticationAction,\n): AuthenticationState => {\n  switch (action.type) {\n    case AuthenticationActionTypes.AUTH_ATTEMPT: {\n      return { ...state, isLoading: true };\n    }\n    case AuthenticationActionTypes.AUTH_SUCCESS: {\n      return {\n        ...state,\n        isLoading: false,\n        isAuthenticated: true,\n        currentUser: action.payload,\n      };\n    }\n    case AuthenticationActionTypes.AUTH_ERROR: {\n      return {\n        ...state,\n        isLoading: false,\n        isAuthenticated: false,\n        currentUser: null,\n      };\n    }\n    case AuthenticationActionTypes.LOGOUT_ATTEMPT: {\n      return { ...state, isLoading: true };\n    }\n    case AuthenticationActionTypes.LOGOUT_SUCCESS: {\n      return {\n        ...state,\n        isLoading: false,\n        isAuthenticated: false,\n        currentUser: null,\n      };\n    }\n    case AuthenticationActionTypes.LOGOUT_ERROR: {\n      return {\n        ...state,\n        isLoading: false,\n        isAuthenticated: false,\n        currentUser: null,\n      };\n    }\n    default: {\n      throw new Error('Invalid action type');\n    }\n  }\n};\n","import { Track } from '../../utils/spotify/spotifyApi.types';\nimport { User } from '../authentication/authentication.types';\n\nexport interface RoomState {\n  users: User[];\n  queue: QueueItem[];\n  currentlyPlaying: CurrentlyPlaying;\n}\n\nexport interface QueueItem {\n  track: Track;\n  user: User;\n}\n\nexport interface CurrentlyPlaying {\n  track: Track | null;\n  user: User | null;\n  startedAt: number;\n}\n\nexport enum RoomActionTypes {\n  UPDATE_USERS = 'update_users',\n  UPDATE_QUEUE = 'update_queue',\n  GET_QUEUE_SUCCESS = 'get_queue_success',\n  UPDATE_CURRENTLY_PLAYING = 'update_currently_playing',\n  GET_CURRENTLY_PLAYING_SUCCESS = 'get_currently_playing_success',\n}\n\nexport type RoomAction =\n  | {\n      type: RoomActionTypes.UPDATE_USERS;\n      payload: User[];\n    }\n  | {\n      type: RoomActionTypes.UPDATE_QUEUE;\n      payload: QueueItem[];\n    }\n  | {\n      type: RoomActionTypes.GET_QUEUE_SUCCESS;\n      payload: QueueItem[];\n    }\n  | {\n      type: RoomActionTypes.UPDATE_CURRENTLY_PLAYING;\n      payload: CurrentlyPlaying;\n    }\n  | {\n      type: RoomActionTypes.GET_CURRENTLY_PLAYING_SUCCESS;\n      payload: CurrentlyPlaying;\n    };\n\nexport type RoomDispatch = (action: RoomAction) => void;\n","import { createCss, StitchesCss } from '@stitches/react';\nimport { colors } from './colors';\nimport { space } from './space';\nimport { radii } from './radii';\nimport { utils } from './utils';\nimport { typography } from './typography';\n\nexport type { StitchesVariants } from '@stitches/react';\n\nexport const defaultTheme = {\n  colors,\n  space,\n  radii,\n  ...typography,\n};\n\nconst stitches = createCss({\n  theme: defaultTheme,\n  utils,\n});\n\nexport const { styled, css, global, keyframes } = stitches;\n\nexport type CSS = StitchesCss<typeof stitches>;\n","export const colors = {\n  accent100: '#786cff',\n  accent200: '#5b4dfd',\n  accent300: '#463bc3',\n  white: '#ffffff',\n  grey100: '#c9d6e2',\n  grey200: '#607283',\n  grey300: '#242f3b',\n  grey400: '#141c23',\n  grey500: '#0d1217',\n  grey600: '#000000',\n};\n","export const space = {\n  1: '4px',\n  2: '8px',\n  3: '16px',\n  4: '24px',\n  5: '32px',\n  6: '40px',\n  7: '48px',\n  8: '56px',\n  9: '64px',\n};\n","export const radii = {\n  1: '3px',\n  2: '5px',\n};\n","export const typography = {\n  fonts: {\n    coreFontFamily: 'Heeboo',\n  },\n  fontSizes: {\n    heading1: '28px',\n    heading2: '20px',\n    paragraph: '14px',\n    small: '12px',\n  },\n  fontWeights: {\n    regular: '400',\n    bold: '700',\n  },\n  lineHeights: {\n    heading1: '42px',\n    heading2: '30px',\n    paragraph: '21px',\n    small: '18px',\n  },\n  letterSpacings: {\n    heading1: '0px',\n    heading2: '0px',\n    paragraph: '0px',\n    small: '0.5px',\n  },\n};\n","import { defaultTheme } from './index';\n\nexport const utils = {\n  bd:\n    (config: any) =>\n    (value: number | `$${keyof typeof defaultTheme['colors']}`) => ({\n      border: `1px solid ${value}`,\n    }),\n  px: (config: any) => (value: any) => ({\n    paddingLeft: value,\n    paddingRight: value,\n  }),\n  py: (config: any) => (value: any) => ({\n    paddingTop: value,\n    paddingBottom: value,\n  }),\n  mx: (config: any) => (value: any) => ({\n    marginLeft: value,\n    marginRight: value,\n  }),\n  my: (config: any) => (value: any) => ({\n    marginTop: value,\n    marginBottom: value,\n  }),\n  linearGradient: (config: any) => (value: any) => ({\n    backgroundImage: `linear-gradient(${value})`,\n  }),\n};\n","import { styled } from '../../../theme';\n\nexport const Box = styled('div', {\n  boxSizing: 'border-box',\n});\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { styled } from '../../../theme';\nimport { ButtonProps } from './Button.types';\n\nconst StyledButton = styled('button', {\n  fontSize: '$small',\n  lineHeight: '$small',\n  fontWeight: '$bold',\n  letterSpacing: '$small',\n  color: '$white',\n  px: '$6',\n  py: '$2',\n  transition: '0.2s',\n  borderRadius: '$1',\n  textDecoration: 'none',\n  '&:focus': {\n    outline: 'none',\n  },\n  variants: {\n    emphasis: {\n      high: {\n        backgroundColor: '$accent200',\n        bd: '$accent200',\n        transition: '0.2s',\n        '&:hover': {\n          backgroundColor: '$accent300',\n          cursor: 'pointer',\n          borderColor: '$accent300',\n        },\n        '&:focus': {\n          boxShadow: '0px 0px 0px 1px $colors$accent100',\n          textDecoration: 'underline',\n          textUnderlineOffset: '3px',\n        },\n        '&:active': {\n          boxShadow: '0px 0px 0px 1px $colors$accent100',\n        },\n      },\n      low: {\n        backgroundColor: '$grey300',\n        bd: '$grey300',\n        color: '$grey100',\n        '&:hover': {\n          backgroundColor: '$grey200',\n          cursor: 'pointer',\n          borderColor: '$grey200',\n        },\n        '&:focus': {\n          boxShadow: '0px 0px 0px 1px $colors$grey100',\n          textDecoration: 'underline',\n        },\n        '&:active': {\n          boxShadow: '0px 0px 0px 1px $colors$grey100',\n        },\n      },\n    },\n    fullWidth: {\n      true: {\n        width: '100%',\n      },\n    },\n  },\n});\n\nexport const Button: React.FC<ButtonProps> = ({\n  children,\n  to,\n  emphasis = 'high',\n  fullWidth = false,\n  css,\n  ...props\n}) => {\n  if (to)\n    return (\n      <Link to={to} style={{ textDecoration: 'none' }}>\n        <StyledButton\n          as=\"span\"\n          css={css as any}\n          fullWidth={fullWidth}\n          emphasis={emphasis}\n        >\n          {children}\n        </StyledButton>\n      </Link>\n    );\n  return (\n    <StyledButton\n      css={css as any}\n      emphasis={emphasis}\n      fullWidth={fullWidth}\n      {...props}\n    >\n      {children}\n    </StyledButton>\n  );\n};\n","import React from 'react';\nimport { styled } from '../../../theme';\nimport { Box } from '../Box';\nimport { CardComponent } from './Card.types';\n\nconst StyledCard = styled(Box, {\n  padding: '$3',\n  backgroundColor: '$grey400',\n  borderRadius: '$2',\n});\n\nexport const Card = React.forwardRef((props, forwardRef) => {\n  const { children, ...cardProps } = props;\n  return <StyledCard {...cardProps}>{children}</StyledCard>;\n}) as CardComponent;\n","import React from 'react';\nimport { styled } from '../../../theme';\nimport { HeadingProps } from './Heading.types';\n\nconst StyledHeading = styled('h1', {\n  margin: '0px',\n  variants: {\n    size: {\n      h1: {\n        fontSize: '$heading1',\n        fontWeight: '$bold',\n        lineHeight: '$heading1',\n        color: '$grey100',\n      },\n      h2: {\n        fontSize: '$heading2',\n        fontWeight: '$bold',\n        lineHeight: '$heading2',\n        color: '$grey100',\n      },\n    },\n  },\n});\n\nexport const Heading: React.FC<HeadingProps> = ({\n  children,\n  size = 'h1',\n  css,\n}) => {\n  return (\n    <StyledHeading as={size} css={css as any} size={size}>\n      {children}\n    </StyledHeading>\n  );\n};\n","import React from 'react';\nimport { styled } from '../../../theme';\nimport { TextProps } from './Text.types';\n\nconst StyledText = styled('p', {\n  margin: '0px',\n  fontWeight: '$regular',\n  color: '$grey100',\n  variants: {\n    size: {\n      paragraph: {\n        fontSize: '$paragraph',\n        lineHeight: '$paragraph',\n      },\n      small: {\n        fontSize: '$small',\n        lineHeight: '$small',\n      },\n    },\n    bold: {\n      true: {\n        fontWeight: '$bold',\n      },\n    },\n  },\n});\n\nexport const Text: React.FC<TextProps> = ({\n  children,\n  bold = false,\n  size = 'paragraph',\n  css,\n}) => {\n  return (\n    <StyledText css={css as any} size={size} bold={bold}>\n      {children}\n    </StyledText>\n  );\n};\n","import React from 'react';\nimport * as RadixAvatar from '@radix-ui/react-avatar';\nimport { styled } from '../../../theme';\nimport { AvatarProps } from './Avatar.types';\nimport { Box } from '../Box';\n\nconst StyledAvatarWrapper = styled(Box, {\n  position: 'relative',\n  display: 'inline-block',\n});\n\nconst StyledAvatar = styled(RadixAvatar.Root, {\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  verticalAlign: 'middle',\n  overflow: 'hidden',\n  userSelect: 'none',\n  variants: {\n    size: {\n      small: {\n        width: '44px',\n        height: '44px',\n        borderRadius: '18px',\n      },\n      medium: {\n        width: '52px',\n        height: '52px',\n        borderRadius: '22px',\n      },\n    },\n  },\n});\n\nconst StyledImage = styled(RadixAvatar.Image, {\n  width: '100%',\n  height: '100%',\n  objectFit: 'cover',\n});\n\nconst StyledFallback = styled(RadixAvatar.Fallback, {\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: '$accent100',\n  color: '$white',\n});\n\nconst StyledAvatarStatus = styled(Box, {\n  position: 'absolute',\n  height: '14px',\n  width: '14px',\n  backgroundColor: '#9DFF7A',\n  bottom: -2,\n  right: -2,\n  borderRadius: '100000px',\n  bd: '$grey500',\n  borderWidth: '2px',\n});\n\nexport const Avatar: React.FC<AvatarProps> = ({\n  css,\n  imageSrc,\n  size = 'small',\n  status,\n  name,\n}) => {\n  const getInitials = (string: string) => {\n    const names = string.split(' ');\n    let initials = names[0].substring(0, 1).toUpperCase();\n\n    if (names.length > 1) {\n      initials += names[names.length - 1].substring(0, 1).toUpperCase();\n    }\n    return initials;\n  };\n\n  return (\n    <StyledAvatarWrapper css={css as any}>\n      <StyledAvatar size={size}>\n        <StyledImage src={imageSrc} />\n        <StyledFallback delayMs={1000}>{getInitials(name)}</StyledFallback>\n      </StyledAvatar>\n      {status && <StyledAvatarStatus />}\n    </StyledAvatarWrapper>\n  );\n};\n","export const Icons = {\n  chevronDown:\n    'M3.13523 6.15803C3.3241 5.95657 3.64052 5.94637 3.84197 6.13523L7.5 9.56464L11.158 6.13523C11.3595 5.94637 11.6759 5.95657 11.8648 6.15803C12.0536 6.35949 12.0434 6.67591 11.842 6.86477L7.84197 10.6148C7.64964 10.7951 7.35036 10.7951 7.15803 10.6148L3.15803 6.86477C2.95657 6.67591 2.94637 6.35949 3.13523 6.15803Z',\n  plus: 'M8 2.75C8 2.47386 7.77614 2.25 7.5 2.25C7.22386 2.25 7 2.47386 7 2.75V7H2.75C2.47386 7 2.25 7.22386 2.25 7.5C2.25 7.77614 2.47386 8 2.75 8H7V12.25C7 12.5261 7.22386 12.75 7.5 12.75C7.77614 12.75 8 12.5261 8 12.25V8H12.25C12.5261 8 12.75 7.77614 12.75 7.5C12.75 7.22386 12.5261 7 12.25 7H8V2.75Z',\n  spyGlass:\n    'M10 6.5C10 8.433 8.433 10 6.5 10C4.567 10 3 8.433 3 6.5C3 4.567 4.567 3 6.5 3C8.433 3 10 4.567 10 6.5ZM9.30884 10.0159C8.53901 10.6318 7.56251 11 6.5 11C4.01472 11 2 8.98528 2 6.5C2 4.01472 4.01472 2 6.5 2C8.98528 2 11 4.01472 11 6.5C11 7.56251 10.6318 8.53901 10.0159 9.30884L12.8536 12.1464C13.0488 12.3417 13.0488 12.6583 12.8536 12.8536C12.6583 13.0488 12.3417 13.0488 12.1464 12.8536L9.30884 10.0159Z',\n  play: 'M3.24182 2.32181C3.3919 2.23132 3.5784 2.22601 3.73338 2.30781L12.7334 7.05781C12.8974 7.14436 13 7.31457 13 7.5C13 7.68543 12.8974 7.85564 12.7334 7.94219L3.73338 12.6922C3.5784 12.774 3.3919 12.7687 3.24182 12.6782C3.09175 12.5877 3 12.4252 3 12.25V2.75C3 2.57476 3.09175 2.4123 3.24182 2.32181ZM4 3.57925V11.4207L11.4288 7.5L4 3.57925Z',\n  pause:\n    'M6.04995 2.74998C6.04995 2.44623 5.80371 2.19998 5.49995 2.19998C5.19619 2.19998 4.94995 2.44623 4.94995 2.74998V12.25C4.94995 12.5537 5.19619 12.8 5.49995 12.8C5.80371 12.8 6.04995 12.5537 6.04995 12.25V2.74998ZM10.05 2.74998C10.05 2.44623 9.80371 2.19998 9.49995 2.19998C9.19619 2.19998 8.94995 2.44623 8.94995 2.74998V12.25C8.94995 12.5537 9.19619 12.8 9.49995 12.8C9.80371 12.8 10.05 12.5537 10.05 12.25V2.74998Z',\n};\n","import React, { forwardRef } from 'react';\nimport { styled } from '../../../theme';\nimport { IconComponent } from './Icon.types';\nimport { Icons } from './icons';\n\nconst StyledSvg = styled('svg', {\n  height: '20px',\n  width: '20px',\n});\n\nexport const Icon = React.forwardRef((props, forwardRef) => {\n  const { fill = '#fff', icon, ...iconProps } = props;\n  return (\n    <StyledSvg\n      viewBox=\"0 0 15 15\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      {...iconProps}\n      ref={forwardRef}\n    >\n      <path fill={fill} d={Icons[icon]} fillRule=\"evenodd\" />\n    </StyledSvg>\n  );\n}) as IconComponent;\n","import React from 'react';\nimport * as DropdownMenu from '@radix-ui/react-dropdown-menu';\nimport { styled } from '../../../theme';\nimport { Text } from '../../core/Text';\nimport { Avatar } from '../../core/Avatar';\nimport { Icon } from '../../core/Icon';\nimport { ProfileMenuProps } from './ProfileMenu.types';\nimport { Box } from '../../core/Box';\n\nconst StyledTrigger = styled(DropdownMenu.Trigger, {\n  display: 'inline-flex',\n  backgroundColor: 'transparent',\n  border: 'none',\n  marginLeft: '$3',\n  padding: '0px',\n  cursor: 'pointer',\n  '&[data-state=\"open\"]': {\n    '& svg': {\n      transform: 'rotate(180deg)',\n    },\n  },\n});\n\nconst StyledContent = styled(DropdownMenu.Content, {\n  minWidth: '85px',\n  backgroundColor: '$grey400',\n  bd: '$grey300',\n  borderRadius: '$2',\n  padding: '$1',\n  marginTop: '$2',\n});\n\nconst StyledItem = styled(DropdownMenu.Item, {\n  fontSize: '$small',\n  fontWeight: '$regular',\n  color: '$grey200',\n  px: '$2',\n  py: '$1',\n  borderRadius: '$2',\n  cursor: 'pointer',\n  '&:focus': {\n    outline: 'none',\n    backgroundColor: '$grey300',\n    color: '$white',\n  },\n});\n\nexport const ProfileMenu: React.FC<ProfileMenuProps> = ({\n  css,\n  profileImage,\n  name,\n  menuItems = [],\n}) => {\n  const menuItemElements = menuItems.map((item, index) => {\n    return (\n      <StyledItem key={index} onSelect={() => item.buttonAction()}>\n        {item.buttonText}\n      </StyledItem>\n    );\n  });\n\n  return (\n    <Box css={css as any}>\n      <DropdownMenu.Root>\n        <Avatar size=\"medium\" imageSrc={profileImage} name={name} />\n        <StyledTrigger>\n          <Text bold={true} css={{ paddingRight: '$1' }}>\n            {name}\n          </Text>\n          <Icon icon=\"chevronDown\" fill=\"#607283\" />\n        </StyledTrigger>\n        <StyledContent align=\"end\">\n          {menuItemElements.length && menuItemElements}\n        </StyledContent>\n      </DropdownMenu.Root>\n    </Box>\n  );\n};\n","import React from 'react';\nimport { MenuItem } from '../../ui/ProfileMenu/ProfileMenu.types';\nimport { Box } from '../../core/Box';\nimport { ProfileMenu } from '../../ui/ProfileMenu';\nimport { HeaderProps } from './Header.types';\nimport { useHistory } from 'react-router';\nimport { RoutePaths } from '../../../routes';\nimport { useAuthenticationDispatch } from '../../../context/authentication/authentication.provider';\nimport { logoutUser } from '../../../context/authentication/authentication.actions';\n\nexport const Header: React.FC<HeaderProps> = ({ currentUser }) => {\n  const dispatch = useAuthenticationDispatch();\n\n  const handleLogout = () => {\n    logoutUser(dispatch);\n  };\n\n  const profileMenuItems: MenuItem[] = [\n    {\n      buttonText: 'Logout',\n      buttonAction: handleLogout,\n    },\n  ];\n\n  return (\n    <Box\n      as=\"header\"\n      css={{ display: 'flex', py: '$3', px: '$2', justifyContent: 'flex-end' }}\n    >\n      <ProfileMenu\n        profileImage={currentUser.profileImage}\n        name={currentUser.name}\n        menuItems={profileMenuItems}\n      />\n    </Box>\n  );\n};\n","import React from 'react';\nimport { Header } from '../../components/layout/Header';\nimport { useAuthenticationState } from '../../context/authentication/authentication.provider';\n\nexport const HeaderContainer: React.FC = () => {\n  const { currentUser } = useAuthenticationState();\n  return currentUser && <Header currentUser={currentUser} />;\n};\n","import React from 'react';\nimport { HeaderContainer } from '../../../containers/Header';\nimport { useAuthenticationState } from '../../../context/authentication/authentication.provider';\nimport { Box } from '../../core/Box';\n\nexport const Page: React.FC<{}> = ({ children }) => {\n  const { isAuthenticated } = useAuthenticationState();\n  return (\n    <Box\n      css={{\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        maxWidth: '800px',\n        mx: 'auto',\n      }}\n    >\n      {isAuthenticated ? <HeaderContainer /> : null}\n      <main>\n        <Box css={{ height: '100%', px: '$3', paddingTop: '$5' }}>\n          {children}\n        </Box>\n      </main>\n    </Box>\n  );\n};\n","import axios, { AxiosResponse } from 'axios';\nimport { QueueItem } from 'src/context/room/room.types';\nimport { RoutePaths } from '../routes';\n\nconst apiRequest = () => {\n  const accessToken = localStorage.getItem('accessToken');\n  const serverBaseUrl = `${process.env.REACT_APP_SERVER_URL}`;\n\n  const axiosInstance = axios.create({\n    baseURL: serverBaseUrl,\n    withCredentials: true,\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n    },\n  });\n\n  axiosInstance.interceptors.response.use(\n    (response: AxiosResponse) => {\n      return response;\n    },\n    async (error: any) => {\n      const originalRequest = error.config;\n      if (error.response.status === 401 && !originalRequest._retry) {\n        originalRequest._retry = true;\n        try {\n          const refreshRes = await axios.get(\n            `${serverBaseUrl}/api/auth/refresh-tokens`,\n            { withCredentials: true },\n          );\n          if (refreshRes.status === 200) {\n            localStorage.setItem('accessToken', refreshRes.data.accessToken);\n            localStorage.setItem(\n              'spotifyAccessToken',\n              refreshRes.data.spotifyAccessToken,\n            );\n            originalRequest.headers.Authorization = `Bearer ${refreshRes.data.accessToken}`;\n            return axiosInstance(originalRequest);\n          }\n        } catch (error: any) {\n          return Promise.reject(error);\n        }\n      } else if (\n        error.response.status === 401 &&\n        error.response.url === 'api/auth/refresh-tokens'\n      ) {\n        window.location.href = RoutePaths.LOGIN;\n      }\n      return Promise.reject(error);\n    },\n  );\n\n  return axiosInstance;\n};\n\nexport const api = {\n  logoutUser: async (): Promise<AxiosResponse<any>> => {\n    return apiRequest().get('api/auth/logout');\n  },\n  getRefreshSpotifyAccessToken: async (): Promise<AxiosResponse<any>> => {\n    return apiRequest().get('/api/auth/refresh-spotify-token');\n  },\n  postTrackToQueue: async (queueItemData: QueueItem) => {\n    return apiRequest().post('/api/room/queue', queueItemData);\n  },\n  getRoomQueue: async () => {\n    return apiRequest().get('/api/room/queue');\n  },\n  getCurrentlyPlaying: async () => {\n    return apiRequest().get('/api/room/currently-playing');\n  },\n};\n","import { api } from '../../utils/api';\nimport { User } from '../authentication/authentication.types';\nimport {\n  CurrentlyPlaying,\n  QueueItem,\n  RoomActionTypes,\n  RoomDispatch,\n} from './room.types';\n\nexport const updateRoomUsers = async (\n  dispatch: RoomDispatch,\n  users: User[],\n) => {\n  dispatch({ type: RoomActionTypes.UPDATE_USERS, payload: users });\n};\n\nexport const updateRoomQueue = async (\n  dispatch: RoomDispatch,\n  queueItems: QueueItem[],\n) => {\n  dispatch({ type: RoomActionTypes.UPDATE_QUEUE, payload: queueItems });\n};\n\nexport const getRoomQueue = async (dispatch: RoomDispatch) => {\n  const queue = await (await api.getRoomQueue()).data;\n  dispatch({ type: RoomActionTypes.GET_QUEUE_SUCCESS, payload: queue });\n};\n\nexport const updateCurrentlyPlaying = async (\n  dispatch: RoomDispatch,\n  currentlyPlaying: CurrentlyPlaying,\n) => {\n  dispatch({\n    type: RoomActionTypes.UPDATE_CURRENTLY_PLAYING,\n    payload: currentlyPlaying,\n  });\n};\n\nexport const getCurrentlyPlaying = async (dispatch: RoomDispatch) => {\n  const currentlyPlaying = await (await api.getCurrentlyPlaying()).data;\n  dispatch({\n    type: RoomActionTypes.GET_CURRENTLY_PLAYING_SUCCESS,\n    payload: currentlyPlaying,\n  });\n  return Promise.resolve();\n};\n","import { MutableRefObject } from 'react';\nimport { HubConnection } from '@microsoft/signalr';\n\nexport interface SocketApi {\n  socket: MutableRefObject<HubConnection | null>;\n  connect: (host: string) => void;\n}\n\nexport enum SocketEventListeners {\n  UPDATE_USERS = 'UpdateUsers',\n  DISCONNECTED = 'disconnected',\n  UPDATE_QUEUE = 'UpdateQueue',\n  UPDATE_CURRENTLY_PLAYING = 'UpdateCurrentlyPlaying',\n}\n\nexport enum SocketEventEmitters {\n  JOIN_ROOM = 'JoinRoom',\n}\n","export const msToMin = (ms: number) => {\n  const minutes = Math.floor((ms % 3600000) / 60000);\n  const seconds = Math.floor(((ms % 360000) % 60000) / 1000);\n  const formattedSeconds = seconds < 10 ? '0' + seconds : seconds;\n  return minutes + ':' + formattedSeconds;\n};\n","import React from 'react';\nimport { styled } from '../../../theme';\nimport { msToMin } from '../../../utils/helpers';\nimport { Track } from '../../../utils/spotify/spotifyApi.types';\nimport { Box } from '../../core/Box';\nimport { Card } from '../../core/Card';\nimport { Text } from '../../core/Text';\nimport { TrackListComponent } from './TrackList.types';\n\nconst StyledTrackListCard = styled(Card, {\n  px: '$3',\n  py: '$2',\n  marginBottom: '$2',\n  bd: '$grey400',\n  transition: '0.25s',\n  '&:hover': {\n    bd: '$grey300',\n  },\n});\n\nconst StyledTrackRow = styled(Box, {\n  display: 'grid',\n  gridColumnGap: '$2',\n  gridTemplateColumns: '20px 50px 1fr auto',\n  backgroundColor: '$grey400',\n  border: 'none',\n  width: '100%',\n});\n\nconst StyledAlbumImage = styled('img', {\n  height: '50px',\n});\n\nconst StyledContentStack = styled(Box, {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  width: '100%',\n});\n\nconst StyledFlexText = styled(Box, {\n  display: 'flex',\n  alignItems: 'center',\n});\n\nconst StyledEmptyTracksCard = styled(Card, {\n  textAlign: 'center',\n});\n\nexport const TrackList = React.forwardRef((props, forwardRef) => {\n  const { tracks, ...trackListProps } = props;\n  const trackList = tracks.map((track: Track, index) => {\n    const durationInMin = msToMin(track.duration);\n    const trackNo = index + 1 < 10 ? '0' + (index + 1) : index + 1;\n    return (\n      <StyledTrackListCard key={track.id}>\n        <StyledTrackRow>\n          <StyledFlexText>\n            <Text size=\"small\" css={{ color: '$grey200' }}>\n              {trackNo}\n            </Text>\n          </StyledFlexText>\n          <StyledAlbumImage src={track.album.images[0].url} />\n          <StyledContentStack>\n            <Text size=\"small\" bold>\n              {track.name}\n            </Text>\n            <Text size=\"small\" css={{ color: '$grey200' }}>\n              {track.artists[0].name}\n            </Text>\n          </StyledContentStack>\n          <StyledFlexText>\n            <Text size=\"small\" css={{ color: '$grey200' }}>\n              {durationInMin}\n            </Text>\n          </StyledFlexText>\n        </StyledTrackRow>\n      </StyledTrackListCard>\n    );\n  });\n  return (\n    <Box {...trackListProps}>\n      {tracks.length ? (\n        <Box>{trackList}</Box>\n      ) : (\n        <StyledEmptyTracksCard>\n          <Text size=\"small\" css={{ color: '$grey200' }}>\n            Queue is empty.\n          </Text>\n        </StyledEmptyTracksCard>\n      )}\n    </Box>\n  );\n}) as TrackListComponent;\n","import { RoomState, RoomAction, RoomActionTypes } from './room.types';\n\nexport const roomReducer = (\n  state: RoomState,\n  action: RoomAction,\n): RoomState => {\n  switch (action.type) {\n    case RoomActionTypes.UPDATE_USERS: {\n      return { ...state, users: action.payload };\n    }\n    case RoomActionTypes.UPDATE_QUEUE: {\n      return { ...state, queue: action.payload };\n    }\n    case RoomActionTypes.GET_QUEUE_SUCCESS: {\n      return { ...state, queue: action.payload };\n    }\n    case RoomActionTypes.UPDATE_CURRENTLY_PLAYING: {\n      return { ...state, currentlyPlaying: action.payload };\n    }\n    case RoomActionTypes.GET_CURRENTLY_PLAYING_SUCCESS: {\n      return { ...state, currentlyPlaying: action.payload };\n    }\n    default: {\n      throw new Error('Invalid action type');\n    }\n  }\n};\n","import React, { createContext, useContext, useReducer } from 'react';\nimport { roomReducer } from './room.reducer';\nimport { RoomState, RoomDispatch } from './room.types';\n\nconst initialState: RoomState = {\n  users: [],\n  queue: [],\n  currentlyPlaying: {\n    track: null,\n    user: null,\n    startedAt: 0,\n  },\n};\n\nconst RoomStateContext = createContext<RoomState>(initialState);\nconst RoomDispatchContext = createContext<RoomDispatch | undefined>(undefined);\n\nexport const RoomProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(roomReducer, initialState);\n\n  return (\n    <RoomStateContext.Provider value={state}>\n      <RoomDispatchContext.Provider value={dispatch}>\n        {children}\n      </RoomDispatchContext.Provider>{' '}\n    </RoomStateContext.Provider>\n  );\n};\n\nexport const useRoomState = () => {\n  const context = useContext(RoomStateContext);\n  if (context === undefined) {\n    throw new Error(\n      'useRoomState must be used within a RoomStateContext Provider',\n    );\n  }\n  return context;\n};\n\nexport const useRoomDispatch = () => {\n  const context = useContext(RoomDispatchContext);\n  if (context === undefined) {\n    throw new Error(\n      'useRoomDispatch must be used within a RoomDispatchContext Provider',\n    );\n  }\n  return context;\n};\n","import React, { useEffect } from 'react';\nimport { getRoomQueue } from '../../context/room/room.actions';\nimport { TrackList } from '../../components/ui/TrackList';\nimport {\n  useRoomDispatch,\n  useRoomState,\n} from '../../context/room/room.provider';\n\nexport const QueueContainer: React.FC = () => {\n  const { queue } = useRoomState();\n  const dispatch = useRoomDispatch();\n\n  useEffect(() => {\n    getRoomQueue(dispatch);\n  }, []);\n\n  const tracks = queue.map((item) => {\n    return item.track;\n  });\n  return <TrackList tracks={tracks} />;\n};\n","import React from 'react';\nimport { styled, keyframes } from '../../../theme';\n\nconst spinnerAnimation = keyframes({\n  '0%': {\n    transform: 'scale(0)',\n  },\n  '40%': {\n    transform: 'scale(1.0)',\n  },\n  '80%': {\n    transform: 'scale(0)',\n  },\n  '100%': {\n    transform: 'scale(0)',\n  },\n});\n\nconst StyledSpinnerContainer = styled('div', {\n  width: '100%',\n  textAlign: 'center',\n  '& div': {\n    width: '8px',\n    height: '8px',\n    backgroundColor: '$grey200',\n    borderRadius: '100%',\n    display: 'inline-block',\n    animation: `${spinnerAnimation} 1.4s infinite ease-in-out both`,\n  },\n});\n\nconst StyledSpinnerItem = styled('div', {\n  '&:nth-of-type(1)': {\n    animationDelay: '-0.32s',\n  },\n  '&:nth-of-type(2)': {\n    animationDelay: '-0.16s',\n  },\n});\n\nexport const Spinner: React.FC = () => {\n  return (\n    <StyledSpinnerContainer>\n      <StyledSpinnerItem />\n      <StyledSpinnerItem />\n      <StyledSpinnerItem />\n    </StyledSpinnerContainer>\n  );\n};\n","import React from 'react';\nimport { styled } from '../../../theme';\nimport { SearchResultsComponent } from './SearchResults.types';\nimport { Box } from '../../core/Box';\nimport { Card } from '../../core/Card';\nimport { Text } from '../../core/Text';\nimport { Track } from '../../../utils/spotify/spotifyApi.types';\nimport { Spinner } from '../../core/Spinner';\nimport { Icon } from '../../core/Icon';\n\nconst StyledResultWrapper = styled(Box, {\n  position: 'absolute',\n  width: '100%',\n  '&:before': {\n    content: '',\n    position: 'absolute',\n    width: '100%',\n    height: '40px',\n    zIndex: '1',\n    bottom: '-35px',\n    linearGradient:\n      '180deg, rgba(13,18,23,1) 20%, rgba(13,18,23,0.8981792546120011) 40%, rgba(13,18,23,0.5844537644159227) 70%, rgba(13,18,23,0) 100%',\n  },\n});\n\nconst StyledResult = styled('button', {\n  backgroundColor: '$grey400',\n  border: 'none',\n  padding: '$1',\n  display: 'flex',\n  alignItems: 'center',\n  marginBottom: '$1',\n  width: '100%',\n  borderRadius: '$2',\n  transition: '0.2s',\n  '&:hover': {\n    backgroundColor: '$grey300',\n    cursor: 'pointer',\n  },\n});\n\nconst StyledAlbumImage = styled('img', {\n  height: '40px',\n});\n\nconst StyledContent = styled(Box, {\n  display: 'flex',\n  width: '100%',\n  px: '$2',\n  flexDirection: 'column',\n  alignItems: 'flex-start',\n});\n\nexport const SearchResults = React.forwardRef((props, forwardRef) => {\n  const {\n    tracks,\n    loading = false,\n    handleTrackSelection,\n    ...SearchResultProps\n  } = props;\n\n  let results;\n\n  if (tracks.length) {\n    results = tracks.map((track: Track) => (\n      <Box key={track.id}>\n        <StyledResult\n          onClick={() => {\n            handleTrackSelection(track.id);\n          }}\n        >\n          <StyledAlbumImage src={track.album.images[0].url} />\n          <StyledContent>\n            <Text size=\"small\">{track.name}</Text>\n            <Text size=\"small\" css={{ color: '$grey200' }}>\n              {track.artists[0].name}\n            </Text>\n          </StyledContent>\n          <Icon icon=\"plus\" fill=\"#c9d6e2\" css={{ paddingRight: '$1' }} />\n        </StyledResult>\n      </Box>\n    ));\n  } else {\n    results = (\n      <Box css={{ textAlign: 'center', py: '$1' }}>\n        <Text size=\"small\" css={{ color: '$grey200' }}>\n          No tracks found\n        </Text>\n      </Box>\n    );\n  }\n  return (\n    <StyledResultWrapper {...SearchResultProps} ref={forwardRef}>\n      <Card\n        css={{\n          position: 'relative',\n          padding: '$1',\n          bd: '$grey300',\n          maxHeight: '300px',\n          overflowY: 'scroll',\n          zIndex: '1',\n        }}\n      >\n        {!loading ? results : <Spinner />}\n      </Card>\n    </StyledResultWrapper>\n  );\n}) as SearchResultsComponent;\n","import React from 'react';\nimport { styled } from '../../../theme';\nimport { Box } from '../Box';\nimport { Icon } from '../Icon';\nimport { InputComponent, Icons } from './Input.types';\n\nconst StyledInputContainer = styled(Box, {\n  position: 'relative',\n});\n\nexport const StyledInput = styled('input', {\n  width: '100%',\n  boxSizing: 'border-box',\n  fontWeight: '$regular',\n  color: '$grey100',\n  fontSize: '$small',\n  lineHeight: '$small',\n  backgroundColor: '$grey500',\n  bd: '$grey300',\n  paddingLeft: '$2',\n  paddingTop: '$2',\n  paddingBottom: '$2',\n  paddingRight: '$2',\n  borderRadius: '$1',\n  '&:focus': {\n    outline: 'none',\n    borderColor: '$accent200',\n  },\n  '&::placeholder': {\n    color: '$grey200',\n  },\n  variants: {\n    showIcon: {\n      true: {\n        paddingRight: '$5',\n      },\n    },\n  },\n});\n\nconst StyledIcon = styled(Icon, {\n  position: 'absolute',\n  right: '$2',\n  top: '50%',\n  transform: 'translateY(-50%)',\n});\n\nexport const Input = React.forwardRef((props, forwardRef) => {\n  const { icon, iconFill, showIcon, ...inputProps } = props;\n  return (\n    <StyledInputContainer>\n      <StyledInput showIcon={showIcon} {...inputProps} ref={forwardRef} />\n      {showIcon && <StyledIcon icon={icon as Icons} fill={iconFill} />}\n    </StyledInputContainer>\n  );\n}) as InputComponent;\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { SearchResults } from '../../components/ui/SearchResults';\nimport { spotifyApi } from '../../utils/spotify/spotifyApi';\nimport { Track } from '../../utils/spotify/spotifyApi.types';\nimport { Input } from '../../components/core/Input';\nimport { api } from '../../utils/api';\nimport { useVisible } from '../../hooks/useVisible';\nimport { Box } from '../../components/core/Box';\nimport { useAuthenticationState } from '../../context/authentication/authentication.provider';\nimport { QueueItem } from '../../context/room/room.types';\nimport { User } from '../../context/authentication/authentication.types';\n\nexport const SearchContainer: React.FC = () => {\n  const { currentUser } = useAuthenticationState();\n  const [searchValue, setSearchValue] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n  const [searchResults, setSearchResults] = useState<Track[]>([]);\n  const { ref, isVisible, setIsVisible } = useVisible<HTMLDivElement>(false);\n\n  useEffect(() => {\n    if (!searchValue) return setSearchResults([]);\n\n    const source = axios.CancelToken.source();\n    const cancelToken = source.token;\n\n    const fetchTracks = async () => {\n      try {\n        setLoading(true);\n        const trackRes = await spotifyApi.getTrackBySearchTerm(\n          searchValue,\n          cancelToken,\n        );\n        setSearchResults(trackRes);\n        setLoading(false);\n      } catch (error) {\n        setSearchResults([]);\n      }\n    };\n\n    fetchTracks();\n\n    return () => source.cancel();\n  }, [searchValue]);\n\n  const handleTrackSelection = (trackId: string) => {\n    const selectedTrack = searchResults.find(\n      (track) => track.id === trackId,\n    ) as Track;\n    const queueItemData: QueueItem = {\n      track: selectedTrack,\n      user: currentUser as User,\n    };\n    api.postTrackToQueue(queueItemData);\n    setIsVisible(false);\n    setSearchValue('');\n  };\n\n  return (\n    <div>\n      <Input\n        value={searchValue}\n        placeholder=\"Add a track to the queue\"\n        onChange={(e) => setSearchValue(e.target.value)}\n        onClick={(e) => setIsVisible(true)}\n        showIcon\n        icon=\"spyGlass\"\n        iconFill=\"#607283\"\n      />\n      {searchValue && isVisible && (\n        <Box css={{ position: 'relative', marginTop: '$1' }}>\n          <SearchResults\n            tracks={searchResults}\n            loading={loading}\n            handleTrackSelection={handleTrackSelection}\n            ref={ref}\n          />\n        </Box>\n      )}\n    </div>\n  );\n};\n","import { useEffect, useRef, useState } from 'react';\n\nexport const useVisible = <T extends HTMLElement>(\n  initialIsVisible: boolean,\n) => {\n  const [isVisible, setIsVisible] = useState<boolean>(initialIsVisible);\n  const ref = useRef<T>(null);\n\n  const handleClickOutside = (event: any) => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      setIsVisible(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside, true);\n    return () => {\n      document.removeEventListener('click', handleClickOutside, true);\n    };\n  }, []);\n\n  return { ref, isVisible, setIsVisible };\n};\n","import { useEffect, useState } from 'react';\nimport { msToMin } from '../utils/helpers';\n\nexport const usePlaybackPosition = (\n  trackDuration: number,\n  trackStartTime: number,\n) => {\n  const [currentPositionMs, setCurrentPositionMs] = useState<number>(0);\n  const [playbackPercent, setPlaybackPercent] = useState<number>(0);\n  const [currentPositionMin, setCurrentPositionMin] = useState<string>('0:00');\n\n  const trackEndTime = trackStartTime + trackDuration;\n\n  const handleTick = () => {\n    const delta = trackEndTime - Date.now();\n    if (delta > 0) {\n      const remaining = trackDuration - delta;\n      const percent = (remaining / trackDuration) * 100;\n      setCurrentPositionMs(remaining);\n      setCurrentPositionMin(msToMin(remaining));\n      setPlaybackPercent(percent);\n    } else {\n      setCurrentPositionMs(0);\n      setCurrentPositionMin('0:00');\n      setPlaybackPercent(0);\n    }\n  };\n\n  useEffect(() => {\n    const tick = setInterval(handleTick, 1000);\n    return () => {\n      clearInterval(tick);\n    };\n  }, [trackStartTime]);\n\n  return { currentPositionMs, currentPositionMin, playbackPercent };\n};\n","import React, { useState } from 'react';\nimport { styled } from '../../../theme';\nimport { PlayerComponent } from './Player.types';\nimport { Card } from '../../core/Card';\nimport { Box } from '../../core/Box';\nimport { Text } from '../../core/Text';\nimport { Icon } from '../../core/Icon';\nimport { Heading } from '../../core/Heading';\nimport { usePlaybackPosition } from '../../../hooks/usePlaybackPosition';\nimport { msToMin } from '../../../utils/helpers';\n\nconst StyledInnerWrapper = styled(Box, {\n  display: 'grid',\n  gridColumnGap: '$3',\n  gridTemplateColumns: '120px auto',\n});\n\nconst StyledAlbumImage = styled('img', {\n  width: '120px',\n});\n\nconst StyledPlayerContent = styled(Box, {\n  display: 'grid',\n  gridColumnGap: '$2',\n  gridTemplateColumns: 'auto 50px',\n});\n\nconst StyledPlaybackBarWrapper = styled(Box, {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  paddingTop: '$3',\n});\n\nconst StyledPlaybackBar = styled(Box, {\n  width: '100%',\n  height: '3px',\n  backgroundColor: '$grey300',\n  position: 'relative',\n  marginBottom: '$2',\n  overflow: 'hidden',\n  borderRadius: '$2',\n});\n\nconst StyledPlaybackBarProgress = styled(Box, {\n  backgroundColor: '$accent200',\n  height: '3px',\n  width: '100%',\n  position: 'absolute',\n  left: '-100%',\n  borderRadius: '$2',\n});\n\nconst StyledPlaybackMeta = styled(Box, {\n  display: 'flex',\n  justifyContent: 'space-between',\n});\n\nconst StyledEmptyTrackCard = styled(Card, {\n  textAlign: 'center',\n});\n\nconst StyledControlButton = styled('button', {\n  backgroundColor: 'transparent',\n  padding: '$2',\n  bd: '$grey300',\n  borderRadius: '50%',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: 'auto',\n  width: 'auto',\n  cursor: 'pointer',\n  marginTop: '$3',\n  transition: '0.15s',\n  '&:hover': {\n    bd: '$grey200',\n  },\n});\n\nexport const Player = React.forwardRef((props, forwardRef) => {\n  const { currentlyPlaying, paused, onControlClick, ...playerProps } = props;\n  const track = currentlyPlaying.track;\n  const user = currentlyPlaying.user;\n  const startedAt = currentlyPlaying.startedAt;\n  const trackDuration = track?.duration ? track?.duration : 0;\n\n  const { currentPositionMin, playbackPercent } = usePlaybackPosition(\n    trackDuration,\n    startedAt,\n  );\n\n  return (\n    <Box {...playerProps}>\n      {track ? (\n        <Card css={{ padding: '$2' }}>\n          <StyledInnerWrapper>\n            <StyledAlbumImage src={track?.album.images[0].url} />\n            <Box\n              css={{\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'space-between',\n              }}\n            >\n              <StyledPlayerContent>\n                <Box>\n                  <Text css={{ color: '$grey200' }}>\n                    {track?.artists[0].name}\n                  </Text>\n                  <Heading size=\"h2\">{track?.name}</Heading>\n                  <Text size=\"small\" css={{ color: '$grey200' }}>\n                    Queued by {user?.name}\n                  </Text>\n                </Box>\n                <Box\n                  css={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                  }}\n                >\n                  <StyledControlButton onClick={() => onControlClick()}>\n                    <Icon icon={paused ? 'play' : 'pause'} fill=\"#c9d6e2\" />\n                  </StyledControlButton>\n                </Box>\n              </StyledPlayerContent>\n              <StyledPlaybackBarWrapper>\n                <StyledPlaybackBar>\n                  <StyledPlaybackBarProgress\n                    css={{ left: `-${100 - playbackPercent}%` }}\n                  />\n                </StyledPlaybackBar>\n                <StyledPlaybackMeta>\n                  <Text size=\"small\" css={{ color: '$grey200' }}>\n                    {currentPositionMin}\n                  </Text>\n                  <Text size=\"small\" css={{ color: '$grey200' }}>\n                    {msToMin(trackDuration)}\n                  </Text>\n                </StyledPlaybackMeta>\n              </StyledPlaybackBarWrapper>\n            </Box>\n          </StyledInnerWrapper>\n        </Card>\n      ) : (\n        <StyledEmptyTrackCard>\n          <Text size=\"small\" css={{ color: '$grey200' }}>\n            No tracks are currently queued.\n          </Text>\n        </StyledEmptyTrackCard>\n      )}\n    </Box>\n  );\n}) as PlayerComponent;\n","/* eslint-disable camelcase */\nimport React, { useEffect, useState } from 'react';\nimport {\n  useRoomState,\n  useRoomDispatch,\n} from '../../context/room/room.provider';\nimport { getCurrentlyPlaying } from '../../context/room/room.actions';\nimport { Player } from '../../components/ui/Player';\nimport { WebPlayer, WebPlayerCallback } from './Player.types';\nimport { spotifyApi } from '../../utils/spotify/spotifyApi';\nimport { usePlaybackPosition } from '../../hooks/usePlaybackPosition';\nimport { api } from '../../utils/api';\n\nexport const PlayerContainer: React.FC = () => {\n  const { currentlyPlaying } = useRoomState();\n  const dispatch = useRoomDispatch();\n  let webPlayer: WebPlayer;\n  let accessToken = localStorage.getItem('spotifyAccessToken');\n  const [deviceReady, setDeviceReady] = useState<boolean>(false);\n  const [deviceId, setDeviceId] = useState<string | null>(null);\n  const [paused, setPaused] = useState<boolean>(true);\n\n  const track = currentlyPlaying.track;\n  const startedAt = currentlyPlaying.startedAt;\n  const trackDuration = track?.duration ? track?.duration : 0;\n  const { currentPositionMs } = usePlaybackPosition(trackDuration, startedAt);\n\n  useEffect(() => {\n    (async () => {\n      // @ts-ignore\n      if (!window.onSpotifyWebPlaybackSDKReady) {\n        // @ts-ignore\n        window.onSpotifyWebPlaybackSDKReady = initializeWebPlayer;\n      } else {\n        initializeWebPlayer();\n      }\n      loadWebPlayerScript();\n      getCurrentlyPlaying(dispatch);\n    })();\n    return () => {\n      // @ts-ignore\n      webPlayer.disconnect();\n    };\n  }, [accessToken]);\n\n  useEffect(() => {\n    if (deviceReady && track) {\n      if (paused) {\n        spotifyApi.pausePlayback(deviceId as string);\n      } else {\n        spotifyApi.startPlayback(\n          track.id,\n          currentPositionMs,\n          deviceId as string,\n        );\n      }\n    }\n  }, [paused, currentlyPlaying]);\n\n  const loadWebPlayerScript = (): Promise<void> => {\n    return new Promise<void>((resolve, reject) => {\n      const existingScriptTag = document.getElementById('spotify-player');\n\n      if (!existingScriptTag) {\n        const scriptTag = document.createElement('script');\n\n        scriptTag.id = 'spotify-player';\n        scriptTag.type = 'text/javascript';\n        scriptTag.async = false;\n        scriptTag.defer = true;\n        scriptTag.src = 'https://sdk.scdn.co/spotify-player.js';\n\n        scriptTag.onload = () => resolve();\n        scriptTag.onerror = (error: any) =>\n          reject(new Error(`Failed to load script: ${error}`));\n\n        document.head.appendChild(scriptTag);\n      } else {\n        resolve();\n      }\n    });\n  };\n\n  const handleControlClick = () => {\n    if (deviceReady) {\n      setPaused(!paused);\n    }\n  };\n\n  const initializeWebPlayer = () => {\n    // @ts-ignore\n    webPlayer = new window.Spotify.Player({\n      name: 'Rooms',\n      getOAuthToken: (cb: WebPlayerCallback) => {\n        const token = accessToken as string;\n        cb(token);\n      },\n    });\n\n    webPlayer.addListener('initialization_error', ({ message }) => {\n      console.error(message);\n    });\n    webPlayer.addListener('authentication_error', async () => {\n      const res = await api.getRefreshSpotifyAccessToken();\n      localStorage.setItem('spotifyAccessToken', res.data.accessToken);\n      accessToken = res.data.accessToken;\n    });\n    webPlayer.addListener('account_error', ({ message }) => {\n      console.error(message);\n    });\n    webPlayer.addListener('playback_error', ({ message }) => {\n      console.error(message);\n    });\n\n    // Playback status updates\n    webPlayer.addListener('player_state_changed', (state) => {\n      if (state) setPaused(state.paused as boolean);\n    });\n\n    // Ready\n    webPlayer.addListener('ready', ({ device_id }) => {\n      console.log('Ready with Device ID', device_id);\n      setDeviceId(device_id);\n      setDeviceReady(true);\n    });\n\n    // Not Ready\n    webPlayer.addListener('not_ready', ({ device_id }) => {\n      console.log('Device ID has gone offline', device_id);\n      setDeviceReady(false);\n    });\n\n    // Connect to the player!\n    webPlayer.connect();\n  };\n\n  return (\n    <Player\n      currentlyPlaying={currentlyPlaying}\n      paused={paused}\n      onControlClick={handleControlClick}\n    />\n  );\n};\n","import React, { createContext, useContext, useRef } from 'react';\nimport { HubConnectionBuilder, HubConnection } from '@microsoft/signalr';\nimport { useAuthenticationState } from '../authentication/authentication.provider';\nimport {\n  updateRoomUsers,\n  updateRoomQueue,\n  updateCurrentlyPlaying,\n} from '../room/room.actions';\nimport { useRoomDispatch } from '../room/room.provider';\nimport {\n  SocketApi,\n  SocketEventEmitters,\n  SocketEventListeners,\n} from './socket.types';\nimport { User } from '../authentication/authentication.types';\nimport { CurrentlyPlaying, QueueItem } from '../room/room.types';\n\nconst SocketConnectionContext = createContext<SocketApi | undefined>(undefined);\n\nexport const SocketProvider: React.FC = ({ children }) => {\n  const { currentUser } = useAuthenticationState();\n  const dispatch = useRoomDispatch();\n  const socket = useRef<HubConnection | null>(null);\n\n  const connect = async (host: string) => {\n    if (socket.current !== null) {\n      await socket.current.stop();\n    }\n    socket.current = new HubConnectionBuilder()\n      .withUrl(host)\n      .withAutomaticReconnect()\n      .build();\n\n    await socket.current.start();\n\n    await socket.current.send('Connect');\n\n    socket.current.on('Connected', (message) => {\n      console.log(message);\n    });\n\n    socket.current.send(SocketEventEmitters.JOIN_ROOM, currentUser);\n\n    socket.current.on(SocketEventListeners.UPDATE_USERS, (users: User[]) => {\n      updateRoomUsers(dispatch, users);\n    });\n\n    socket.current.on(\n      SocketEventListeners.UPDATE_CURRENTLY_PLAYING,\n      (currentlyPlaying: CurrentlyPlaying) => {\n        updateCurrentlyPlaying(dispatch, currentlyPlaying);\n      },\n    );\n\n    socket.current.on(\n      SocketEventListeners.UPDATE_QUEUE,\n      (queueItems: QueueItem[]) => {\n        updateRoomQueue(dispatch, queueItems);\n      },\n    );\n  };\n\n  const socketApi: SocketApi = { socket, connect };\n\n  return (\n    <SocketConnectionContext.Provider value={socketApi}>\n      {children}\n    </SocketConnectionContext.Provider>\n  );\n};\n\nexport const useSocketConnection = () => {\n  const context = useContext(SocketConnectionContext);\n  if (context === undefined) {\n    throw new Error(\n      'useSocketConnection must be used within a SocketConnectionContext Provider',\n    );\n  }\n  return context;\n};\n","import { Route } from './containers/ApplicationRoute/ApplicationRoute.types';\nimport { LoginView } from './views/Login';\nimport { DashboardView } from './views/Dashboard';\n\nexport enum RoutePaths {\n  NOT_FOUND = '*',\n  LOGIN = '/login',\n  DASHBOARD = '/dashboard',\n}\n\nexport const Routes: Route[] = [\n  {\n    path: RoutePaths.LOGIN,\n    component: LoginView,\n    isPrivate: false,\n  },\n  {\n    path: RoutePaths.DASHBOARD,\n    component: DashboardView,\n    isPrivate: true,\n  },\n  {\n    path: RoutePaths.NOT_FOUND,\n    component: DashboardView,\n    isPrivate: true,\n    exact: true,\n  },\n];\n","import { styled } from '../../../theme';\nimport { Box } from '../../core/Box';\n\nexport const Root = styled(Box, {\n  display: 'grid',\n  gridColumnGap: '$5',\n  gridTemplateColumns: '1fr 3fr',\n});\n\nexport const Left = styled(Box, {});\n\nexport const Main = styled(Box, {});\n","import React from 'react';\nimport { Box } from '../../core/Box';\nimport { Text } from '../../core/Text';\nimport { UserListProps } from './UserList.types';\nimport { styled } from '../../../theme';\nimport { Avatar } from '../../core/Avatar';\nimport { User } from '../../../context/authentication/authentication.types';\n\nexport const StyledUser = styled(Box, {\n  display: 'flex',\n  alignItems: 'center',\n});\n\nexport const UserList: React.FC<UserListProps> = ({ users }) => {\n  return (\n    <Box>\n      {users.map((user: User) => {\n        return (\n          <StyledUser\n            key={user.userId}\n            css={{ marginTop: '$4', '&:first-of-type': { marginTop: '0px' } }}\n          >\n            <Avatar imageSrc={user.profileImage} name={user.name} status />\n            <Text css={{ paddingLeft: '$3' }} size=\"small\" bold>\n              {user.name}\n            </Text>\n          </StyledUser>\n        );\n      })}\n    </Box>\n  );\n};\n","import React from 'react';\nimport { Heading } from '../../components/core/Heading';\nimport { Text } from '../../components/core/Text';\nimport { Box } from '../../components/core/Box';\nimport { UserList } from '../../components/ui/UserList';\nimport { useRoomState } from '../../context/room/room.provider';\n\nexport const PeopleContainer = () => {\n  const { users } = useRoomState();\n  return (\n    <Box>\n      <Heading size=\"h2\" css={{ marginBottom: '$2' }}>\n        People\n      </Heading>\n      <Text css={{ color: '$grey200', marginBottom: '$3' }}>\n        Online ({users.length})\n      </Text>\n      <UserList users={users} />\n    </Box>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Heading } from '../../components/core/Heading';\nimport { Box } from '../../components/core/Box';\nimport { Page } from '../../components/layout/Page';\nimport { QueueContainer } from '../../containers/QueueContainer';\nimport { SearchContainer } from '../../containers/Search';\nimport { PlayerContainer } from '../../containers/Player/';\nimport { useSocketConnection } from '../../context/socket/socket.provider';\nimport * as MultiRails from '../../components/layout/MultiRails';\nimport { PeopleContainer } from '../../containers/People';\n\nexport const DashboardView: React.FC = () => {\n  const conn = useSocketConnection();\n  const host = `${process.env.REACT_APP_SERVER_URL}/hubs/room`;\n\n  useEffect(() => {\n    conn.connect(host);\n    return () => {\n      conn.socket.current?.stop();\n    };\n  }, []);\n\n  return (\n    <Page>\n      <MultiRails.Root>\n        <MultiRails.Left>\n          <PeopleContainer />\n        </MultiRails.Left>\n        <MultiRails.Main>\n          <Heading size=\"h2\" css={{ marginBottom: '$2' }}>\n            Now Playing\n          </Heading>\n          <Box css={{ marginBottom: '$4' }}>\n            <PlayerContainer />\n          </Box>\n          <Box css={{ marginBottom: '$4' }}>\n            <SearchContainer />\n          </Box>\n          <Heading size=\"h2\" css={{ marginBottom: '$2' }}>\n            Up Next\n          </Heading>\n          <QueueContainer />\n        </MultiRails.Main>\n      </MultiRails.Root>\n    </Page>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useAuthenticationState } from '../../context/authentication/authentication.provider';\nimport { Box } from '../../components/core/Box';\nimport { Button } from '../../components/core/Button';\nimport { Card } from '../../components/core/Card';\nimport { Heading } from '../../components/core/Heading';\nimport { Text } from '../../components/core/Text';\nimport { Page } from '../../components/layout/Page';\nimport { RoutePaths } from '../../routes';\nimport { useHistory } from 'react-router';\n\nexport const LoginView = () => {\n  const { isAuthenticated } = useAuthenticationState();\n  const history = useHistory();\n\n  useEffect(() => {\n    isAuthenticated && history.push(RoutePaths.DASHBOARD);\n  }, []);\n\n  const handleLogin = () =>\n    (location.href = `${process.env.REACT_APP_SERVER_URL}/api/auth/login`);\n\n  return (\n    <Page>\n      <Box\n        css={{\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Card\n          css={{\n            display: 'inline-block',\n            textAlign: 'center',\n            px: '$4',\n            maxWidth: '350px',\n          }}\n        >\n          <Heading size=\"h1\" css={{ marginBottom: '$1' }}>\n            Rooms 💃\n          </Heading>\n          <Text\n            size=\"paragraph\"\n            css={{ marginBottom: '$5', color: '$grey200' }}\n          >\n            Sign in via Spotify and stream your favourite songs together.\n          </Text>\n          <Button fullWidth onClick={handleLogin}>\n            Login via Spotify\n          </Button>\n        </Card>\n      </Box>\n    </Page>\n  );\n};\n","import axios, { AxiosResponse, CancelToken } from 'axios';\nimport { User } from '../../context/authentication/authentication.types';\nimport { RoutePaths } from '../../routes';\nimport { api } from '../api';\nimport { Album, Artist, Track } from './spotifyApi.types';\n\nconst spotifyRequest = () => {\n  const spotifyAccessToken = localStorage.getItem('spotifyAccessToken');\n  const serverBaseUrl = `${process.env.REACT_APP_SERVER_URL}`;\n\n  const axiosInstance = axios.create({\n    baseURL: 'https://api.spotify.com/v1',\n    headers: {\n      Authorization: `Bearer ${spotifyAccessToken}`,\n    },\n  });\n\n  axiosInstance.interceptors.response.use(\n    (response: AxiosResponse) => {\n      return response;\n    },\n    async (error: any) => {\n      const originalRequest = error.config;\n      if (error.response.status === 401 && !originalRequest._retry) {\n        originalRequest._retry = true;\n        try {\n          const refreshRes = await axios.get(\n            `${serverBaseUrl}/api/auth/refresh-tokens`,\n            { withCredentials: true },\n          );\n          if (refreshRes.status === 200) {\n            localStorage.setItem('accessToken', refreshRes.data.accessToken);\n            localStorage.setItem(\n              'spotifyAccessToken',\n              refreshRes.data.spotifyAccessToken,\n            );\n            originalRequest.headers.Authorization = `Bearer ${refreshRes.data.accessToken}`;\n            return axiosInstance(originalRequest);\n          }\n        } catch (error: any) {\n          return Promise.reject(error);\n        }\n      } else if (\n        error.response.status === 401 &&\n        error.response.url === 'api/auth/refresh-tokens'\n      ) {\n        window.location.href = RoutePaths.LOGIN;\n      }\n      return Promise.reject(error);\n    },\n  );\n\n  return axiosInstance;\n};\n\nexport const spotifyApi = {\n  getTrackBySearchTerm: async (\n    searchTerm: string,\n    cancelToken?: CancelToken,\n  ): Promise<Track[]> => {\n    const limit = 10;\n    const type = 'track';\n    let transformedTrackObj: Track[] = [];\n    try {\n      const res = await spotifyRequest().get(\n        `search?q=${searchTerm}&type=${type}&limit=${limit}`,\n        {\n          cancelToken,\n        },\n      );\n      transformedTrackObj = res.data.tracks.items.map((track: any) => {\n        const transformedArtistObj: Artist[] = track.artists.map(\n          (artist: any) => {\n            return <Artist>{\n              id: artist.id,\n              name: artist.name,\n            };\n          },\n        );\n\n        const transformedAlbumObj: Album = {\n          id: track.album.id,\n          name: track.album.name,\n          images: track.album.images,\n        };\n\n        return <Track>{\n          id: track.id,\n          name: track.name,\n          duration: track.duration_ms,\n          artists: transformedArtistObj,\n          album: transformedAlbumObj,\n        };\n      });\n    } catch (error) {\n      if (axios.isCancel(error)) return Promise.resolve(error);\n    }\n\n    return transformedTrackObj;\n  },\n  startPlayback: async (\n    trackId: string,\n    position: number,\n    deviceId: string,\n  ) => {\n    const body = {\n      uris: [`spotify:track:${trackId}`],\n      position_ms: position,\n    };\n    try {\n      await spotifyRequest().put(`me/player/play?device_id=${deviceId}`, body);\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  pausePlayback: async (deviceId: string) => {\n    try {\n      await spotifyRequest().put(`me/player/pause?device_id=${deviceId}`, {});\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  getCurrentUserDetails: async (): Promise<User> => {\n    try {\n      const res = await spotifyRequest().get('me');\n      const transformedUserObj: User = {\n        userId: res.data.id,\n        name: res.data.display_name,\n        profileImage: res.data.images[0].url,\n      };\n      return transformedUserObj;\n    } catch (error) {\n      console.log(error);\n      return Promise.reject(error);\n    }\n  },\n};\n","import axios from 'axios';\nimport { spotifyApi } from '../../utils/spotify/spotifyApi';\nimport { api } from '../../utils/api';\nimport {\n  AuthenticationActionTypes,\n  AuthenticationDispatch,\n  User,\n} from './authentication.types';\n\nexport const getCurrentUser = async (dispatch: AuthenticationDispatch) => {\n  try {\n    dispatch({ type: AuthenticationActionTypes.AUTH_ATTEMPT });\n    const userDetails = await spotifyApi.getCurrentUserDetails();\n    dispatch({\n      type: AuthenticationActionTypes.AUTH_SUCCESS,\n      payload: userDetails,\n    });\n  } catch (error) {\n    dispatch({ type: AuthenticationActionTypes.AUTH_ERROR });\n  }\n};\n\nexport const logoutUser = async (dispatch: AuthenticationDispatch) => {\n  try {\n    dispatch({ type: AuthenticationActionTypes.LOGOUT_ATTEMPT });\n    await api.logoutUser();\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('spotifyAccessToken');\n    dispatch({ type: AuthenticationActionTypes.LOGOUT_SUCCESS });\n  } catch (error) {\n    dispatch({ type: AuthenticationActionTypes.LOGOUT_ERROR });\n  }\n};\n","import React, { createContext, useContext, useEffect, useReducer } from 'react';\nimport { authenticationReducer } from './authentication.reducer';\nimport { getCurrentUser } from './authentication.actions';\nimport {\n  AuthenticationState,\n  AuthenticationDispatch,\n} from './authentication.types';\nimport { Box } from '../../components/core/Box';\nimport { useLocation } from 'react-router';\n\nconst initialState: AuthenticationState = {\n  isLoading: true,\n  isAuthenticated: false,\n  currentUser: null,\n};\n\nconst AuthenticationStateContext =\n  createContext<AuthenticationState>(initialState);\nconst AuthenicationDispatchContext =\n  createContext<AuthenticationDispatch | undefined>(undefined);\n\nexport const AuthenticationProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(authenticationReducer, initialState);\n  const search = useLocation().search;\n\n  useEffect(() => {\n    const accessToken = new URLSearchParams(search).get('accessToken');\n    const spotifyAccessToken = new URLSearchParams(search).get(\n      'spotifyAccessToken',\n    );\n\n    accessToken && localStorage.setItem('accessToken', accessToken);\n    spotifyAccessToken &&\n      localStorage.setItem('spotifyAccessToken', spotifyAccessToken);\n\n    getCurrentUser(dispatch);\n  }, []);\n\n  return (\n    <AuthenticationStateContext.Provider value={state}>\n      <AuthenicationDispatchContext.Provider value={dispatch}>\n        {state.isLoading ? <Box></Box> : children}\n      </AuthenicationDispatchContext.Provider>{' '}\n    </AuthenticationStateContext.Provider>\n  );\n};\n\nexport const useAuthenticationState = () => {\n  const context = useContext(AuthenticationStateContext);\n  if (context === undefined) {\n    throw new Error(\n      'useAuthenticationState must be used within a AuthenticationStateContext Provider',\n    );\n  }\n  return context;\n};\n\nexport const useAuthenticationDispatch = () => {\n  const context = useContext(AuthenicationDispatchContext);\n  if (context === undefined) {\n    throw new Error(\n      'useAuthenticationDispatch must be used within a AuthenticationDispatchContext Provider',\n    );\n  }\n  return context;\n};\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useAuthenticationState } from '../../context/authentication/authentication.provider';\nimport { RoutePaths } from '../../routes';\nimport { Route as IRoute } from './ApplicationRoute.types';\n\nexport const ApplicationRouteContainer: React.FC<IRoute> = ({\n  path,\n  component: Component,\n  isPrivate,\n  ...rest\n}) => {\n  const { isAuthenticated } = useAuthenticationState();\n  return (\n    <Route path={path} {...rest}>\n      {isPrivate && !isAuthenticated ? (\n        <Redirect to={{ pathname: RoutePaths.LOGIN }} />\n      ) : (\n        <Component />\n      )}\n    </Route>\n  );\n};\n","import { global } from '.';\n\nexport const globalStyles = global({\n  '@import': [\n    `'https://fonts.googleapis.com/css2?family=Heebo:wght@400;700&display=swap'`,\n  ],\n  '*': {\n    fontFamily: 'Heebo',\n  },\n  'body, h1, h2, h3, h4, p, figure, blockquote, dl, dd': {\n    margin: '0px',\n  },\n  body: {\n    backgroundColor: '$grey500',\n    textRendering: 'optimizeSpeed',\n  },\n  'html, body, main, #root': {\n    height: '100%',\n  },\n});\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { ApplicationRouteContainer } from './containers/ApplicationRoute';\nimport { Route as IRoute } from './containers/ApplicationRoute/ApplicationRoute.types';\nimport { AuthenticationProvider } from './context/authentication/authentication.provider';\nimport { RoomProvider } from './context/room/room.provider';\nimport { SocketProvider } from './context/socket/socket.provider';\nimport { Routes } from './routes';\nimport { globalStyles } from './theme/globalStyles';\n\nfunction App() {\n  globalStyles();\n  return (\n    <AuthenticationProvider>\n      <RoomProvider>\n        <SocketProvider>\n          <Switch>\n            {Routes.map((route: IRoute) => (\n              <ApplicationRouteContainer\n                key={route.path}\n                path={route.path}\n                component={route.component}\n                isPrivate={route.isPrivate}\n              />\n            ))}\n          </Switch>\n        </SocketProvider>\n      </RoomProvider>\n    </AuthenticationProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { BrowserRouter as Router } from 'react-router-dom';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}